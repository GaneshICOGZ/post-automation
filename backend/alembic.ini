# A generic, single database configuration.

[alembic]
# path to migration scripts
script_location = alembic

# template used to generate migration files
# file_template = %%(rev)s_%%(slug)s

# timezone to use when rendering the date
# within the migration file as well as the filename.
timezone = UTC

# max length of characters to apply to the
# migration file template
# truncate_slug_length = 40

# set to 'true' to run the environment file as a standalone script
# standalone_mode = false

# enable logging file configuration
# logging_config_file =

# logging level for commands
# default value is INFO
logging_level = INFO

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S

# set to 'false' to force ASCII mode
# default is true
# logging_encoding = utf-8

# set to 'true' to force sqlalchemy warnings
# default is false
# sqlalchemy_warn_20 = true
sqlalchemy.url = sqlite:///./ai_content.db

[post_write_hooks]
# post_write_hooks defines scripts or Python functions that are run
# on newly generated revision scripts.  See the documentation for further
# detail and examples

# format using "black" - use the console_scripts runner specified in pyproject.toml
# hooks = black
# black.type = console_scripts
# black.entrypoint = black
# black.options = -l 79
